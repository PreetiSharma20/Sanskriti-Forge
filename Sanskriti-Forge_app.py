# -*- coding: utf-8 -*-
"""Sanskriti Forge UI.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1hlbqvCxwp1YhznF0K4dVdWbbeocgYxHO

Sanskriti Forge UI

Sanskriti-Forge chatbot UI using Streamlit and a free Hugging Face model (falcon-7b-instruct).
"""

# ✅ Sanskriti-Forge: Advanced Dynamic Chatbot UI using Streamlit & Hugging Face
import streamlit as st
from transformers import pipeline
import pandas as pd
import json
import os

# ---------------------------
# Page Configuration
# ---------------------------
st.set_page_config(page_title="Sanskriti-Forge", page_icon="🕉️", layout="centered")
st.title("🕉️ Sanskriti-Forge: Indian Culture Chatbot")
st.markdown("""
Welcome to **Sanskriti-Forge**, your AI companion for exploring India's timeless cultural heritage.
Ask me anything about festivals, rituals, temples, mythology, art, literature, or history! 🌸📚
""")

# ---------------------------
# Load Pretrained Model
# ---------------------------
@st.cache_resource(show_spinner=True)
def load_model():
    return pipeline("text-generation", model="gpt2")

nlp = load_model()

# ---------------------------
# Initialize Session State
# ---------------------------
if "messages" not in st.session_state:
    st.session_state.messages = []  # Store chat messages
if "dataset" not in st.session_state:
    st.session_state.dataset = []   # Store for future training/export

# ---------------------------
# Chat Interface
# ---------------------------
st.markdown("## 📜 Chat with Sanskriti-Forge")

# Display previous chat messages
for msg in st.session_state.messages:
    role = msg["role"]
    content = msg["content"]

    if role == "user":
        with st.chat_message("user"):
            st.markdown(f"🧑‍💻 **You:** {content}")
    else:
        with st.chat_message("assistant"):
            st.markdown(f"🕉️ **Sanskriti-Forge:** {content}")

# Text input for new queries
user_input = st.chat_input("Ask about Indian culture...")

# If user submits a prompt
if user_input:
    # Save user message
    st.session_state.messages.append({"role": "user", "content": user_input})

    # Display user's message
    with st.chat_message("user"):
        st.markdown(f"🧑‍💻 **You:** {user_input}")

    # Generate response
    with st.spinner("🔮 Summoning ancient wisdom..."):
        model_output = nlp(user_input, max_length=250, do_sample=True, temperature=0.6, top_k=50, top_p=0.95)
        bot_reply = model_output[0]['generated_text'].strip()

    # Save assistant response
    st.session_state.messages.append({"role": "assistant", "content": bot_reply})

    # Display assistant's message
    with st.chat_message("assistant"):
        st.markdown(f"🕉️ **Sanskriti-Forge:** {bot_reply}")

    # Save into dataset for export
    st.session_state.dataset.append({
        "query": user_input,
        "response": bot_reply
    })

# ---------------------------
# Export Knowledge Dataset
# ---------------------------
st.markdown("---")
st.markdown("## 📁 Manage Your Cultural Dataset")

col1, col2 = st.columns(2)

with col1:
    if st.button("⬇️ Download Dataset (CSV)"):
        if st.session_state.dataset:
            df = pd.DataFrame(st.session_state.dataset)
            csv = df.to_csv(index=False).encode('utf-8')
            st.download_button("📥 Download CSV", csv, "sanskriti_knowledge_pool.csv", "text/csv")
        else:
            st.warning("No data to download yet. Start chatting!")

with col2:
    if st.button("⬇️ Save Full Chat (JSON)"):
        if st.session_state.messages:
            chat_history = {
                "conversation": st.session_state.messages
            }
            json_data = json.dumps(chat_history, indent=4)
            st.download_button("📥 Download JSON", json_data, "sanskriti_full_conversation.json", "application/json")
        else:
            st.warning("No conversation to save yet. Start chatting!")

# ---------------------------
# Footer
# ---------------------------
st.markdown("""<hr><center>🚀 Powered by Sanskriti-Forge | Built with ❤️ for Bharat 🇮🇳</center>""", unsafe_allow_html=True)